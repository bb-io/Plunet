//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DataJobRound30Service
{
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://API.Integration/", ConfigurationName="DataJobRound30Service.DataJobRound30")]
    public interface DataJobRound30
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://API.Integration/DataJobRound30/deleteRequest", ReplyAction="http://API.Integration/DataJobRound30/deleteResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="Result")]
        System.Threading.Tasks.Task<DataJobRound30Service.Result> deleteAsync(string UUID, int roundID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://API.Integration/DataJobRound30/addRoundRequest", ReplyAction="http://API.Integration/DataJobRound30/addRoundResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="IntegerResult")]
        System.Threading.Tasks.Task<DataJobRound30Service.IntegerResult> addRoundAsync(string UUID, int jobID, int projectType, DataJobRound30Service.JobRoundIN jobRoundIN);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://API.Integration/DataJobRound30/getAssignedRoundIDRequest", ReplyAction="http://API.Integration/DataJobRound30/getAssignedRoundIDResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="IntegerResult")]
        System.Threading.Tasks.Task<DataJobRound30Service.IntegerResult> getAssignedRoundIDAsync(string UUID, int jobID, int projectType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://API.Integration/DataJobRound30/getRoundObjectRequest", ReplyAction="http://API.Integration/DataJobRound30/getRoundObjectResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="JobRoundResult")]
        System.Threading.Tasks.Task<DataJobRound30Service.JobRoundResult> getRoundObjectAsync(string UUID, int roundID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://API.Integration/DataJobRound30/assignResourceRequest", ReplyAction="http://API.Integration/DataJobRound30/assignResourceResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="Result")]
        System.Threading.Tasks.Task<DataJobRound30Service.Result> assignResourceAsync(string UUID, int resourceID, int resourceContactID, int roundID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://API.Integration/DataJobRound30/setRankingMethodsRequest", ReplyAction="http://API.Integration/DataJobRound30/setRankingMethodsResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<DataJobRound30Service.setRankingMethodsResponse> setRankingMethodsAsync(DataJobRound30Service.setRankingMethodsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://API.Integration/DataJobRound30/getAllRoundIDsRequest", ReplyAction="http://API.Integration/DataJobRound30/getAllRoundIDsResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="IntegerArrayResult")]
        System.Threading.Tasks.Task<DataJobRound30Service.IntegerArrayResult> getAllRoundIDsAsync(string UUID, int jobID, int projectType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://API.Integration/DataJobRound30/getRankingMethodsRequest", ReplyAction="http://API.Integration/DataJobRound30/getRankingMethodsResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="JobRoundRankingMethodListResult")]
        System.Threading.Tasks.Task<DataJobRound30Service.JobRoundRankingMethodListResult> getRankingMethodsAsync(string UUID, int roundID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://API.Integration/DataJobRound30/updateRoundRequest", ReplyAction="http://API.Integration/DataJobRound30/updateRoundResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="Result")]
        System.Threading.Tasks.Task<DataJobRound30Service.Result> updateRoundAsync(string UUID, DataJobRound30Service.JobRoundIN roundIN);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://API.Integration/DataJobRound30/setSearchCriteriaRequest", ReplyAction="http://API.Integration/DataJobRound30/setSearchCriteriaResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="Result")]
        System.Threading.Tasks.Task<DataJobRound30Service.Result> setSearchCriteriaAsync(string UUID, DataJobRound30Service.JobRoundSearchCriteriaIN JobRoundSearchCriteriaIN, int roundID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://API.Integration/DataJobRound30/assignResource_InReviewRequest", ReplyAction="http://API.Integration/DataJobRound30/assignResource_InReviewResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="Result")]
        System.Threading.Tasks.Task<DataJobRound30Service.Result> assignResource_InReviewAsync(string UUID, int roundID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://API.Integration/DataJobRound30/getResourcesForRoundRequest", ReplyAction="http://API.Integration/DataJobRound30/getResourcesForRoundResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="IntegerArrayResult")]
        System.Threading.Tasks.Task<DataJobRound30Service.IntegerArrayResult> getResourcesForRoundAsync(string UUID, int roundID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://API.Integration/DataJobRound30/setResourceForReviewRequest", ReplyAction="http://API.Integration/DataJobRound30/setResourceForReviewResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="Result")]
        System.Threading.Tasks.Task<DataJobRound30Service.Result> setResourceForReviewAsync(string UUID, int resourceID, int resourceContactID, int roundID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://API.Integration/DataJobRound30/getSearchCriteriaRequest", ReplyAction="http://API.Integration/DataJobRound30/getSearchCriteriaResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="JobRoundSearchCriteriaResult")]
        System.Threading.Tasks.Task<DataJobRound30Service.JobRoundSearchcriteriaResult> getSearchCriteriaAsync(string UUID, int roundID);
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(JobRoundSearchcriteriaResult))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(JobRoundRankingMethodListResult))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(IntegerResult))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(JobRoundResult))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(IntegerArrayResult))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://API.Integration/")]
    public partial class Result
    {
        
        private int statusCodeField;
        
        private string statusCodeAlphanumericField;
        
        private string statusMessageField;
        
        private System.Nullable<int>[] warning_StatusCodeListField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public int statusCode
        {
            get
            {
                return this.statusCodeField;
            }
            set
            {
                this.statusCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1)]
        public string statusCodeAlphanumeric
        {
            get
            {
                return this.statusCodeAlphanumericField;
            }
            set
            {
                this.statusCodeAlphanumericField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=2)]
        public string statusMessage
        {
            get
            {
                return this.statusMessageField;
            }
            set
            {
                this.statusMessageField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("warning_StatusCodeList", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true, Order=3)]
        public System.Nullable<int>[] warning_StatusCodeList
        {
            get
            {
                return this.warning_StatusCodeListField;
            }
            set
            {
                this.warning_StatusCodeListField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://API.Integration/")]
    public partial class JobRoundSearchCriteriaIN
    {
        
        private bool includeNonRespondingResourcesField;
        
        private bool includeNotRequestedResourcesField;
        
        private bool includeRejectingResourcesField;
        
        private Property[] propertyListField;
        
        private System.Nullable<int>[] resourceStatusField;
        
        private int roundIdField;
        
        private int searchCriterionIdField;
        
        private System.Nullable<int>[] workingStatusField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public bool includeNonRespondingResources
        {
            get
            {
                return this.includeNonRespondingResourcesField;
            }
            set
            {
                this.includeNonRespondingResourcesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1)]
        public bool includeNotRequestedResources
        {
            get
            {
                return this.includeNotRequestedResourcesField;
            }
            set
            {
                this.includeNotRequestedResourcesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=2)]
        public bool includeRejectingResources
        {
            get
            {
                return this.includeRejectingResourcesField;
            }
            set
            {
                this.includeRejectingResourcesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("propertyList", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true, Order=3)]
        public Property[] propertyList
        {
            get
            {
                return this.propertyListField;
            }
            set
            {
                this.propertyListField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("resourceStatus", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true, Order=4)]
        public System.Nullable<int>[] resourceStatus
        {
            get
            {
                return this.resourceStatusField;
            }
            set
            {
                this.resourceStatusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=5)]
        public int roundId
        {
            get
            {
                return this.roundIdField;
            }
            set
            {
                this.roundIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=6)]
        public int searchCriterionId
        {
            get
            {
                return this.searchCriterionIdField;
            }
            set
            {
                this.searchCriterionIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("workingStatus", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true, Order=7)]
        public System.Nullable<int>[] workingStatus
        {
            get
            {
                return this.workingStatusField;
            }
            set
            {
                this.workingStatusField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://API.Integration/")]
    public partial class Property
    {
        
        private System.Nullable<int>[] avaliablePropertyValueIDListField;
        
        private string mainPropertyNameEnglishField;
        
        private string propertyNameEnglishField;
        
        private int propertyTypeField;
        
        private int selectedPropertyValueIDField;
        
        private System.Nullable<int>[] selectedPropertyValueListField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("avaliablePropertyValueIDList", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true, Order=0)]
        public System.Nullable<int>[] avaliablePropertyValueIDList
        {
            get
            {
                return this.avaliablePropertyValueIDListField;
            }
            set
            {
                this.avaliablePropertyValueIDListField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1)]
        public string mainPropertyNameEnglish
        {
            get
            {
                return this.mainPropertyNameEnglishField;
            }
            set
            {
                this.mainPropertyNameEnglishField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=2)]
        public string propertyNameEnglish
        {
            get
            {
                return this.propertyNameEnglishField;
            }
            set
            {
                this.propertyNameEnglishField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=3)]
        public int propertyType
        {
            get
            {
                return this.propertyTypeField;
            }
            set
            {
                this.propertyTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=4)]
        public int selectedPropertyValueID
        {
            get
            {
                return this.selectedPropertyValueIDField;
            }
            set
            {
                this.selectedPropertyValueIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("selectedPropertyValueList", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true, Order=5)]
        public System.Nullable<int>[] selectedPropertyValueList
        {
            get
            {
                return this.selectedPropertyValueListField;
            }
            set
            {
                this.selectedPropertyValueListField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://API.Integration/")]
    public partial class JobRoundIN
    {
        
        private int assignmentLimitToFirstXField;
        
        private int assignmentLimitTypeField;
        
        private int assignmentMethodField;
        
        private int jobIDField;
        
        private int jobRoundIDField;
        
        private int jobRoundNumberField;
        
        private int projectTypeField;
        
        private bool sendNotificationOnFailureField;
        
        private bool sendNotificationOnJobAcceptField;
        
        private bool sendNotificationOnJobRejectField;
        
        private bool startNextRoundAutomaticallyField;
        
        private int statusField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public int assignmentLimitToFirstX
        {
            get
            {
                return this.assignmentLimitToFirstXField;
            }
            set
            {
                this.assignmentLimitToFirstXField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1)]
        public int assignmentLimitType
        {
            get
            {
                return this.assignmentLimitTypeField;
            }
            set
            {
                this.assignmentLimitTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=2)]
        public int assignmentMethod
        {
            get
            {
                return this.assignmentMethodField;
            }
            set
            {
                this.assignmentMethodField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=3)]
        public int jobID
        {
            get
            {
                return this.jobIDField;
            }
            set
            {
                this.jobIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=4)]
        public int jobRoundID
        {
            get
            {
                return this.jobRoundIDField;
            }
            set
            {
                this.jobRoundIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=5)]
        public int jobRoundNumber
        {
            get
            {
                return this.jobRoundNumberField;
            }
            set
            {
                this.jobRoundNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=6)]
        public int projectType
        {
            get
            {
                return this.projectTypeField;
            }
            set
            {
                this.projectTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=7)]
        public bool sendNotificationOnFailure
        {
            get
            {
                return this.sendNotificationOnFailureField;
            }
            set
            {
                this.sendNotificationOnFailureField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=8)]
        public bool sendNotificationOnJobAccept
        {
            get
            {
                return this.sendNotificationOnJobAcceptField;
            }
            set
            {
                this.sendNotificationOnJobAcceptField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=9)]
        public bool sendNotificationOnJobReject
        {
            get
            {
                return this.sendNotificationOnJobRejectField;
            }
            set
            {
                this.sendNotificationOnJobRejectField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=10)]
        public bool startNextRoundAutomatically
        {
            get
            {
                return this.startNextRoundAutomaticallyField;
            }
            set
            {
                this.startNextRoundAutomaticallyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=11)]
        public int status
        {
            get
            {
                return this.statusField;
            }
            set
            {
                this.statusField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://API.Integration/")]
    public partial class JobRoundSearchCriteria
    {
        
        private bool includeNonRespondingResourcesField;
        
        private bool includeNotRequestedResourcesField;
        
        private bool includeRejectingResourcesField;
        
        private Property[] propertyListField;
        
        private System.Nullable<int>[] resourceStatusField;
        
        private int roundIdField;
        
        private int searchCriterionIdField;
        
        private System.Nullable<int>[] workingStatusField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public bool includeNonRespondingResources
        {
            get
            {
                return this.includeNonRespondingResourcesField;
            }
            set
            {
                this.includeNonRespondingResourcesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1)]
        public bool includeNotRequestedResources
        {
            get
            {
                return this.includeNotRequestedResourcesField;
            }
            set
            {
                this.includeNotRequestedResourcesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=2)]
        public bool includeRejectingResources
        {
            get
            {
                return this.includeRejectingResourcesField;
            }
            set
            {
                this.includeRejectingResourcesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("propertyList", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true, Order=3)]
        public Property[] propertyList
        {
            get
            {
                return this.propertyListField;
            }
            set
            {
                this.propertyListField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("resourceStatus", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true, Order=4)]
        public System.Nullable<int>[] resourceStatus
        {
            get
            {
                return this.resourceStatusField;
            }
            set
            {
                this.resourceStatusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=5)]
        public int roundId
        {
            get
            {
                return this.roundIdField;
            }
            set
            {
                this.roundIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=6)]
        public int searchCriterionId
        {
            get
            {
                return this.searchCriterionIdField;
            }
            set
            {
                this.searchCriterionIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("workingStatus", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true, Order=7)]
        public System.Nullable<int>[] workingStatus
        {
            get
            {
                return this.workingStatusField;
            }
            set
            {
                this.workingStatusField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://API.Integration/")]
    public partial class JobRoundRankingMethod
    {
        
        private int methodTypeField;
        
        private int priorityField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public int methodType
        {
            get
            {
                return this.methodTypeField;
            }
            set
            {
                this.methodTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1)]
        public int priority
        {
            get
            {
                return this.priorityField;
            }
            set
            {
                this.priorityField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://API.Integration/")]
    public partial class JobRound
    {
        
        private int assignmentLimitToFirstXField;
        
        private int assignmentLimitTypeField;
        
        private int assignmentMethodField;
        
        private int jobIDField;
        
        private int jobRoundIDField;
        
        private int jobRoundNumberField;
        
        private int projectTypeField;
        
        private bool sendNotificationOnFailureField;
        
        private bool sendNotificationOnJobAcceptField;
        
        private bool sendNotificationOnJobRejectField;
        
        private bool startNextRoundAutomaticallyField;
        
        private int statusField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public int assignmentLimitToFirstX
        {
            get
            {
                return this.assignmentLimitToFirstXField;
            }
            set
            {
                this.assignmentLimitToFirstXField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1)]
        public int assignmentLimitType
        {
            get
            {
                return this.assignmentLimitTypeField;
            }
            set
            {
                this.assignmentLimitTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=2)]
        public int assignmentMethod
        {
            get
            {
                return this.assignmentMethodField;
            }
            set
            {
                this.assignmentMethodField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=3)]
        public int jobID
        {
            get
            {
                return this.jobIDField;
            }
            set
            {
                this.jobIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=4)]
        public int jobRoundID
        {
            get
            {
                return this.jobRoundIDField;
            }
            set
            {
                this.jobRoundIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=5)]
        public int jobRoundNumber
        {
            get
            {
                return this.jobRoundNumberField;
            }
            set
            {
                this.jobRoundNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=6)]
        public int projectType
        {
            get
            {
                return this.projectTypeField;
            }
            set
            {
                this.projectTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=7)]
        public bool sendNotificationOnFailure
        {
            get
            {
                return this.sendNotificationOnFailureField;
            }
            set
            {
                this.sendNotificationOnFailureField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=8)]
        public bool sendNotificationOnJobAccept
        {
            get
            {
                return this.sendNotificationOnJobAcceptField;
            }
            set
            {
                this.sendNotificationOnJobAcceptField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=9)]
        public bool sendNotificationOnJobReject
        {
            get
            {
                return this.sendNotificationOnJobRejectField;
            }
            set
            {
                this.sendNotificationOnJobRejectField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=10)]
        public bool startNextRoundAutomatically
        {
            get
            {
                return this.startNextRoundAutomaticallyField;
            }
            set
            {
                this.startNextRoundAutomaticallyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=11)]
        public int status
        {
            get
            {
                return this.statusField;
            }
            set
            {
                this.statusField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://API.Integration/")]
    public partial class JobRoundSearchcriteriaResult : Result
    {
        
        private JobRoundSearchCriteria dataField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public JobRoundSearchCriteria data
        {
            get
            {
                return this.dataField;
            }
            set
            {
                this.dataField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://API.Integration/")]
    public partial class JobRoundRankingMethodListResult : Result
    {
        
        private JobRoundRankingMethod[] dataField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("data", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true, Order=0)]
        public JobRoundRankingMethod[] data
        {
            get
            {
                return this.dataField;
            }
            set
            {
                this.dataField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://API.Integration/")]
    public partial class IntegerResult : Result
    {
        
        private int dataField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public int data
        {
            get
            {
                return this.dataField;
            }
            set
            {
                this.dataField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://API.Integration/")]
    public partial class JobRoundResult : Result
    {
        
        private JobRound dataField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public JobRound data
        {
            get
            {
                return this.dataField;
            }
            set
            {
                this.dataField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://API.Integration/")]
    public partial class IntegerArrayResult : Result
    {
        
        private System.Nullable<int>[] dataField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("data", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true, Order=0)]
        public System.Nullable<int>[] data
        {
            get
            {
                return this.dataField;
            }
            set
            {
                this.dataField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="setRankingMethods", WrapperNamespace="http://API.Integration/", IsWrapped=true)]
    public partial class setRankingMethodsRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public string UUID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=1)]
        [System.Xml.Serialization.XmlArrayAttribute()]
        [System.Xml.Serialization.XmlArrayItemAttribute("data", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public DataJobRound30Service.JobRoundRankingMethod[] JobRoundRankingMethodList;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=2)]
        public int roundID;
        
        public setRankingMethodsRequest()
        {
        }
        
        public setRankingMethodsRequest(string UUID, DataJobRound30Service.JobRoundRankingMethod[] JobRoundRankingMethodList, int roundID)
        {
            this.UUID = UUID;
            this.JobRoundRankingMethodList = JobRoundRankingMethodList;
            this.roundID = roundID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="setRankingMethodsResponse", WrapperNamespace="http://API.Integration/", IsWrapped=true)]
    public partial class setRankingMethodsResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public DataJobRound30Service.Result Result;
        
        public setRankingMethodsResponse()
        {
        }
        
        public setRankingMethodsResponse(DataJobRound30Service.Result Result)
        {
            this.Result = Result;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    public interface DataJobRound30Channel : DataJobRound30Service.DataJobRound30, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    public partial class DataJobRound30Client : System.ServiceModel.ClientBase<DataJobRound30Service.DataJobRound30>, DataJobRound30Service.DataJobRound30
    {
        
        /// <summary>
        /// Implement this partial method to configure the service endpoint.
        /// </summary>
        /// <param name="serviceEndpoint">The endpoint to configure</param>
        /// <param name="clientCredentials">The client credentials</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public DataJobRound30Client() : 
                base(DataJobRound30Client.GetDefaultBinding(), DataJobRound30Client.GetDefaultEndpointAddress())
        {
            this.Endpoint.Name = EndpointConfiguration.DataJobRound30Port.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public DataJobRound30Client(EndpointConfiguration endpointConfiguration) : 
                base(DataJobRound30Client.GetBindingForEndpoint(endpointConfiguration), DataJobRound30Client.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public DataJobRound30Client(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(DataJobRound30Client.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public DataJobRound30Client(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(DataJobRound30Client.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public DataJobRound30Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public System.Threading.Tasks.Task<DataJobRound30Service.Result> deleteAsync(string UUID, int roundID)
        {
            return base.Channel.deleteAsync(UUID, roundID);
        }
        
        public System.Threading.Tasks.Task<DataJobRound30Service.IntegerResult> addRoundAsync(string UUID, int jobID, int projectType, DataJobRound30Service.JobRoundIN jobRoundIN)
        {
            return base.Channel.addRoundAsync(UUID, jobID, projectType, jobRoundIN);
        }
        
        public System.Threading.Tasks.Task<DataJobRound30Service.IntegerResult> getAssignedRoundIDAsync(string UUID, int jobID, int projectType)
        {
            return base.Channel.getAssignedRoundIDAsync(UUID, jobID, projectType);
        }
        
        public System.Threading.Tasks.Task<DataJobRound30Service.JobRoundResult> getRoundObjectAsync(string UUID, int roundID)
        {
            return base.Channel.getRoundObjectAsync(UUID, roundID);
        }
        
        public System.Threading.Tasks.Task<DataJobRound30Service.Result> assignResourceAsync(string UUID, int resourceID, int resourceContactID, int roundID)
        {
            return base.Channel.assignResourceAsync(UUID, resourceID, resourceContactID, roundID);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<DataJobRound30Service.setRankingMethodsResponse> DataJobRound30Service.DataJobRound30.setRankingMethodsAsync(DataJobRound30Service.setRankingMethodsRequest request)
        {
            return base.Channel.setRankingMethodsAsync(request);
        }
        
        public System.Threading.Tasks.Task<DataJobRound30Service.setRankingMethodsResponse> setRankingMethodsAsync(string UUID, DataJobRound30Service.JobRoundRankingMethod[] JobRoundRankingMethodList, int roundID)
        {
            DataJobRound30Service.setRankingMethodsRequest inValue = new DataJobRound30Service.setRankingMethodsRequest();
            inValue.UUID = UUID;
            inValue.JobRoundRankingMethodList = JobRoundRankingMethodList;
            inValue.roundID = roundID;
            return ((DataJobRound30Service.DataJobRound30)(this)).setRankingMethodsAsync(inValue);
        }
        
        public System.Threading.Tasks.Task<DataJobRound30Service.IntegerArrayResult> getAllRoundIDsAsync(string UUID, int jobID, int projectType)
        {
            return base.Channel.getAllRoundIDsAsync(UUID, jobID, projectType);
        }
        
        public System.Threading.Tasks.Task<DataJobRound30Service.JobRoundRankingMethodListResult> getRankingMethodsAsync(string UUID, int roundID)
        {
            return base.Channel.getRankingMethodsAsync(UUID, roundID);
        }
        
        public System.Threading.Tasks.Task<DataJobRound30Service.Result> updateRoundAsync(string UUID, DataJobRound30Service.JobRoundIN roundIN)
        {
            return base.Channel.updateRoundAsync(UUID, roundIN);
        }
        
        public System.Threading.Tasks.Task<DataJobRound30Service.Result> setSearchCriteriaAsync(string UUID, DataJobRound30Service.JobRoundSearchCriteriaIN JobRoundSearchCriteriaIN, int roundID)
        {
            return base.Channel.setSearchCriteriaAsync(UUID, JobRoundSearchCriteriaIN, roundID);
        }
        
        public System.Threading.Tasks.Task<DataJobRound30Service.Result> assignResource_InReviewAsync(string UUID, int roundID)
        {
            return base.Channel.assignResource_InReviewAsync(UUID, roundID);
        }
        
        public System.Threading.Tasks.Task<DataJobRound30Service.IntegerArrayResult> getResourcesForRoundAsync(string UUID, int roundID)
        {
            return base.Channel.getResourcesForRoundAsync(UUID, roundID);
        }
        
        public System.Threading.Tasks.Task<DataJobRound30Service.Result> setResourceForReviewAsync(string UUID, int resourceID, int resourceContactID, int roundID)
        {
            return base.Channel.setResourceForReviewAsync(UUID, resourceID, resourceContactID, roundID);
        }
        
        public System.Threading.Tasks.Task<DataJobRound30Service.JobRoundSearchcriteriaResult> getSearchCriteriaAsync(string UUID, int roundID)
        {
            return base.Channel.getSearchCriteriaAsync(UUID, roundID);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.DataJobRound30Port))
            {
                System.ServiceModel.Channels.CustomBinding result = new System.ServiceModel.Channels.CustomBinding();
                System.ServiceModel.Channels.TextMessageEncodingBindingElement textBindingElement = new System.ServiceModel.Channels.TextMessageEncodingBindingElement();
                textBindingElement.MessageVersion = System.ServiceModel.Channels.MessageVersion.CreateVersion(System.ServiceModel.EnvelopeVersion.Soap12, System.ServiceModel.Channels.AddressingVersion.None);
                result.Elements.Add(textBindingElement);
                System.ServiceModel.Channels.HttpsTransportBindingElement httpsBindingElement = new System.ServiceModel.Channels.HttpsTransportBindingElement();
                httpsBindingElement.AllowCookies = true;
                httpsBindingElement.MaxBufferSize = int.MaxValue;
                httpsBindingElement.MaxReceivedMessageSize = int.MaxValue;
                result.Elements.Add(httpsBindingElement);
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.DataJobRound30Port))
            {
                return new System.ServiceModel.EndpointAddress("https://plunet-friend-blackbird.plunet.com/DataJobRound30");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding()
        {
            return DataJobRound30Client.GetBindingForEndpoint(EndpointConfiguration.DataJobRound30Port);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress()
        {
            return DataJobRound30Client.GetEndpointAddress(EndpointConfiguration.DataJobRound30Port);
        }
        
        public enum EndpointConfiguration
        {
            
            DataJobRound30Port,
        }
    }
}

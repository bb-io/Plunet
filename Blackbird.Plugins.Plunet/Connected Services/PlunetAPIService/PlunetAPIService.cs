//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Blackbird.Plugins.Plunet.PlunetAPIService
{
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://API.Integration/", ConfigurationName="Blackbird.Plugins.Plunet.PlunetAPIService.PlunetAPI")]
    public interface PlunetAPI
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://API.Integration/PlunetAPI/validateRequest", ReplyAction="http://API.Integration/PlunetAPI/validateResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Result))]
        [return: System.ServiceModel.MessageParameterAttribute(Name="Result")]
        System.Threading.Tasks.Task<Blackbird.Plugins.Plunet.PlunetAPIService.BooleanResult> validateAsync(string UUID, string Username, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://API.Integration/PlunetAPI/getVersionRequest", ReplyAction="http://API.Integration/PlunetAPI/getVersionResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Result))]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<double> getVersionAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://API.Integration/PlunetAPI/loginRequest", ReplyAction="http://API.Integration/PlunetAPI/loginResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Result))]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<string> loginAsync(string arg0, string arg1);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://API.Integration/PlunetAPI/logoutRequest", ReplyAction="http://API.Integration/PlunetAPI/logoutResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Result))]
        System.Threading.Tasks.Task logoutAsync(string arg0);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://API.Integration/PlunetAPI/getPlunetVersionRequest", ReplyAction="http://API.Integration/PlunetAPI/getPlunetVersionResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Result))]
        [return: System.ServiceModel.MessageParameterAttribute(Name="StringResult")]
        System.Threading.Tasks.Task<Blackbird.Plugins.Plunet.PlunetAPIService.StringResult> getPlunetVersionAsync();
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://API.Integration/")]
    public partial class BooleanResult : Result
    {
        
        private bool dataField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public bool data
        {
            get
            {
                return this.dataField;
            }
            set
            {
                this.dataField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(BooleanResult))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(StringResult))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://API.Integration/")]
    public partial class Result
    {
        
        private int statusCodeField;
        
        private string statusCodeAlphanumericField;
        
        private string statusMessageField;
        
        private System.Nullable<int>[] warning_StatusCodeListField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public int statusCode
        {
            get
            {
                return this.statusCodeField;
            }
            set
            {
                this.statusCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1)]
        public string statusCodeAlphanumeric
        {
            get
            {
                return this.statusCodeAlphanumericField;
            }
            set
            {
                this.statusCodeAlphanumericField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=2)]
        public string statusMessage
        {
            get
            {
                return this.statusMessageField;
            }
            set
            {
                this.statusMessageField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("warning_StatusCodeList", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true, Order=3)]
        public System.Nullable<int>[] warning_StatusCodeList
        {
            get
            {
                return this.warning_StatusCodeListField;
            }
            set
            {
                this.warning_StatusCodeListField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://API.Integration/")]
    public partial class StringResult : Result
    {
        
        private string dataField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public string data
        {
            get
            {
                return this.dataField;
            }
            set
            {
                this.dataField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    public interface PlunetAPIChannel : Blackbird.Plugins.Plunet.PlunetAPIService.PlunetAPI, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    public partial class PlunetAPIClient : System.ServiceModel.ClientBase<Blackbird.Plugins.Plunet.PlunetAPIService.PlunetAPI>, Blackbird.Plugins.Plunet.PlunetAPIService.PlunetAPI
    {
        
        /// <summary>
        /// Implement this partial method to configure the service endpoint.
        /// </summary>
        /// <param name="serviceEndpoint">The endpoint to configure</param>
        /// <param name="clientCredentials">The client credentials</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public PlunetAPIClient() : 
                base(PlunetAPIClient.GetDefaultBinding(), PlunetAPIClient.GetDefaultEndpointAddress())
        {
            this.Endpoint.Name = EndpointConfiguration.PlunetAPIPort.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public PlunetAPIClient(EndpointConfiguration endpointConfiguration) : 
                base(PlunetAPIClient.GetBindingForEndpoint(endpointConfiguration), PlunetAPIClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public PlunetAPIClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(PlunetAPIClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public PlunetAPIClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(PlunetAPIClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public PlunetAPIClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public System.Threading.Tasks.Task<Blackbird.Plugins.Plunet.PlunetAPIService.BooleanResult> validateAsync(string UUID, string Username, string Password)
        {
            return base.Channel.validateAsync(UUID, Username, Password);
        }
        
        public System.Threading.Tasks.Task<double> getVersionAsync()
        {
            return base.Channel.getVersionAsync();
        }
        
        public System.Threading.Tasks.Task<string> loginAsync(string arg0, string arg1)
        {
            return base.Channel.loginAsync(arg0, arg1);
        }
        
        public System.Threading.Tasks.Task logoutAsync(string arg0)
        {
            return base.Channel.logoutAsync(arg0);
        }
        
        public System.Threading.Tasks.Task<Blackbird.Plugins.Plunet.PlunetAPIService.StringResult> getPlunetVersionAsync()
        {
            return base.Channel.getPlunetVersionAsync();
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.PlunetAPIPort))
            {
                System.ServiceModel.Channels.CustomBinding result = new System.ServiceModel.Channels.CustomBinding();
                System.ServiceModel.Channels.TextMessageEncodingBindingElement textBindingElement = new System.ServiceModel.Channels.TextMessageEncodingBindingElement();
                textBindingElement.MessageVersion = System.ServiceModel.Channels.MessageVersion.CreateVersion(System.ServiceModel.EnvelopeVersion.Soap12, System.ServiceModel.Channels.AddressingVersion.None);
                result.Elements.Add(textBindingElement);
                System.ServiceModel.Channels.HttpsTransportBindingElement httpsBindingElement = new System.ServiceModel.Channels.HttpsTransportBindingElement();
                httpsBindingElement.AllowCookies = true;
                httpsBindingElement.MaxBufferSize = int.MaxValue;
                httpsBindingElement.MaxReceivedMessageSize = int.MaxValue;
                result.Elements.Add(httpsBindingElement);
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.PlunetAPIPort))
            {
                return new System.ServiceModel.EndpointAddress("https://test71.plunet.com/PlunetAPI");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding()
        {
            return PlunetAPIClient.GetBindingForEndpoint(EndpointConfiguration.PlunetAPIPort);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress()
        {
            return PlunetAPIClient.GetEndpointAddress(EndpointConfiguration.PlunetAPIPort);
        }
        
        public enum EndpointConfiguration
        {
            
            PlunetAPIPort,
        }
    }
}

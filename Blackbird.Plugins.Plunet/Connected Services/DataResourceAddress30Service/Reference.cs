//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DataResourceAddress30Service
{
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://API.Integration/", ConfigurationName="DataResourceAddress30Service.DataResourceAddress30")]
    public interface DataResourceAddress30
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://API.Integration/DataResourceAddress30/updateRequest", ReplyAction="http://API.Integration/DataResourceAddress30/updateResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="Result")]
        DataResourceAddress30Service.Result update(string UUID, DataResourceAddress30Service.AddressIN AddressIN, bool enableNullOrEmptyValues);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://API.Integration/DataResourceAddress30/updateRequest", ReplyAction="http://API.Integration/DataResourceAddress30/updateResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="Result")]
        System.Threading.Tasks.Task<DataResourceAddress30Service.Result> updateAsync(string UUID, DataResourceAddress30Service.AddressIN AddressIN, bool enableNullOrEmptyValues);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://API.Integration/DataResourceAddress30/deleteRequest", ReplyAction="http://API.Integration/DataResourceAddress30/deleteResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="Result")]
        DataResourceAddress30Service.Result delete(string UUID, int AddressID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://API.Integration/DataResourceAddress30/deleteRequest", ReplyAction="http://API.Integration/DataResourceAddress30/deleteResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="Result")]
        System.Threading.Tasks.Task<DataResourceAddress30Service.Result> deleteAsync(string UUID, int AddressID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://API.Integration/DataResourceAddress30/getStateRequest", ReplyAction="http://API.Integration/DataResourceAddress30/getStateResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="StringResult")]
        DataResourceAddress30Service.StringResult getState(string UUID, int AddressID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://API.Integration/DataResourceAddress30/getStateRequest", ReplyAction="http://API.Integration/DataResourceAddress30/getStateResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="StringResult")]
        System.Threading.Tasks.Task<DataResourceAddress30Service.StringResult> getStateAsync(string UUID, int AddressID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://API.Integration/DataResourceAddress30/insertRequest", ReplyAction="http://API.Integration/DataResourceAddress30/insertResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="IntegerResult")]
        DataResourceAddress30Service.IntegerResult insert(string UUID, int resourceID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://API.Integration/DataResourceAddress30/insertRequest", ReplyAction="http://API.Integration/DataResourceAddress30/insertResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="IntegerResult")]
        System.Threading.Tasks.Task<DataResourceAddress30Service.IntegerResult> insertAsync(string UUID, int resourceID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://API.Integration/DataResourceAddress30/getCountryRequest", ReplyAction="http://API.Integration/DataResourceAddress30/getCountryResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="StringResult")]
        DataResourceAddress30Service.StringResult getCountry(string UUID, int AddressID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://API.Integration/DataResourceAddress30/getCountryRequest", ReplyAction="http://API.Integration/DataResourceAddress30/getCountryResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="StringResult")]
        System.Threading.Tasks.Task<DataResourceAddress30Service.StringResult> getCountryAsync(string UUID, int AddressID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://API.Integration/DataResourceAddress30/setStateRequest", ReplyAction="http://API.Integration/DataResourceAddress30/setStateResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="Result")]
        DataResourceAddress30Service.Result setState(string UUID, string State, int AddressID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://API.Integration/DataResourceAddress30/setStateRequest", ReplyAction="http://API.Integration/DataResourceAddress30/setStateResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="Result")]
        System.Threading.Tasks.Task<DataResourceAddress30Service.Result> setStateAsync(string UUID, string State, int AddressID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://API.Integration/DataResourceAddress30/setDescriptionRequest", ReplyAction="http://API.Integration/DataResourceAddress30/setDescriptionResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="Result")]
        DataResourceAddress30Service.Result setDescription(string UUID, string Description, int AddressID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://API.Integration/DataResourceAddress30/setDescriptionRequest", ReplyAction="http://API.Integration/DataResourceAddress30/setDescriptionResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="Result")]
        System.Threading.Tasks.Task<DataResourceAddress30Service.Result> setDescriptionAsync(string UUID, string Description, int AddressID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://API.Integration/DataResourceAddress30/getDescriptionRequest", ReplyAction="http://API.Integration/DataResourceAddress30/getDescriptionResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="StringResult")]
        DataResourceAddress30Service.StringResult getDescription(string UUID, int AddressID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://API.Integration/DataResourceAddress30/getDescriptionRequest", ReplyAction="http://API.Integration/DataResourceAddress30/getDescriptionResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="StringResult")]
        System.Threading.Tasks.Task<DataResourceAddress30Service.StringResult> getDescriptionAsync(string UUID, int AddressID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://API.Integration/DataResourceAddress30/setAddressTypeRequest", ReplyAction="http://API.Integration/DataResourceAddress30/setAddressTypeResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="Result")]
        DataResourceAddress30Service.Result setAddressType(string UUID, int AddressType, int addressID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://API.Integration/DataResourceAddress30/setAddressTypeRequest", ReplyAction="http://API.Integration/DataResourceAddress30/setAddressTypeResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="Result")]
        System.Threading.Tasks.Task<DataResourceAddress30Service.Result> setAddressTypeAsync(string UUID, int AddressType, int addressID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://API.Integration/DataResourceAddress30/setName1Request", ReplyAction="http://API.Integration/DataResourceAddress30/setName1Response")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="Result")]
        DataResourceAddress30Service.Result setName1(string UUID, string Name, int AddressID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://API.Integration/DataResourceAddress30/setName1Request", ReplyAction="http://API.Integration/DataResourceAddress30/setName1Response")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="Result")]
        System.Threading.Tasks.Task<DataResourceAddress30Service.Result> setName1Async(string UUID, string Name, int AddressID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://API.Integration/DataResourceAddress30/insert2Request", ReplyAction="http://API.Integration/DataResourceAddress30/insert2Response")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="IntegerResult")]
        DataResourceAddress30Service.IntegerResult insert2(string UUID, int ResourceID, DataResourceAddress30Service.AddressIN AddressIN);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://API.Integration/DataResourceAddress30/insert2Request", ReplyAction="http://API.Integration/DataResourceAddress30/insert2Response")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="IntegerResult")]
        System.Threading.Tasks.Task<DataResourceAddress30Service.IntegerResult> insert2Async(string UUID, int ResourceID, DataResourceAddress30Service.AddressIN AddressIN);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://API.Integration/DataResourceAddress30/getName1Request", ReplyAction="http://API.Integration/DataResourceAddress30/getName1Response")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="StringResult")]
        DataResourceAddress30Service.StringResult getName1(string UUID, int AddressID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://API.Integration/DataResourceAddress30/getName1Request", ReplyAction="http://API.Integration/DataResourceAddress30/getName1Response")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="StringResult")]
        System.Threading.Tasks.Task<DataResourceAddress30Service.StringResult> getName1Async(string UUID, int AddressID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://API.Integration/DataResourceAddress30/setName2Request", ReplyAction="http://API.Integration/DataResourceAddress30/setName2Response")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="Result")]
        DataResourceAddress30Service.Result setName2(string UUID, string Name, int AddressID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://API.Integration/DataResourceAddress30/setName2Request", ReplyAction="http://API.Integration/DataResourceAddress30/setName2Response")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="Result")]
        System.Threading.Tasks.Task<DataResourceAddress30Service.Result> setName2Async(string UUID, string Name, int AddressID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://API.Integration/DataResourceAddress30/getName2Request", ReplyAction="http://API.Integration/DataResourceAddress30/getName2Response")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="StringResult")]
        DataResourceAddress30Service.StringResult getName2(string UUID, int AddressID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://API.Integration/DataResourceAddress30/getName2Request", ReplyAction="http://API.Integration/DataResourceAddress30/getName2Response")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="StringResult")]
        System.Threading.Tasks.Task<DataResourceAddress30Service.StringResult> getName2Async(string UUID, int AddressID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://API.Integration/DataResourceAddress30/getAddressTypeRequest", ReplyAction="http://API.Integration/DataResourceAddress30/getAddressTypeResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="StringResult")]
        DataResourceAddress30Service.IntegerResult getAddressType(string UUID, int addressID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://API.Integration/DataResourceAddress30/getAddressTypeRequest", ReplyAction="http://API.Integration/DataResourceAddress30/getAddressTypeResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="StringResult")]
        System.Threading.Tasks.Task<DataResourceAddress30Service.IntegerResult> getAddressTypeAsync(string UUID, int addressID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://API.Integration/DataResourceAddress30/setZipRequest", ReplyAction="http://API.Integration/DataResourceAddress30/setZipResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="Result")]
        DataResourceAddress30Service.Result setZip(string UUID, string Zip, int AddressID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://API.Integration/DataResourceAddress30/setZipRequest", ReplyAction="http://API.Integration/DataResourceAddress30/setZipResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="Result")]
        System.Threading.Tasks.Task<DataResourceAddress30Service.Result> setZipAsync(string UUID, string Zip, int AddressID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://API.Integration/DataResourceAddress30/setCityRequest", ReplyAction="http://API.Integration/DataResourceAddress30/setCityResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="Result")]
        DataResourceAddress30Service.Result setCity(string UUID, string City, int AddressID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://API.Integration/DataResourceAddress30/setCityRequest", ReplyAction="http://API.Integration/DataResourceAddress30/setCityResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="Result")]
        System.Threading.Tasks.Task<DataResourceAddress30Service.Result> setCityAsync(string UUID, string City, int AddressID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://API.Integration/DataResourceAddress30/getZipRequest", ReplyAction="http://API.Integration/DataResourceAddress30/getZipResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="StringResult")]
        DataResourceAddress30Service.StringResult getZip(string UUID, int AddressID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://API.Integration/DataResourceAddress30/getZipRequest", ReplyAction="http://API.Integration/DataResourceAddress30/getZipResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="StringResult")]
        System.Threading.Tasks.Task<DataResourceAddress30Service.StringResult> getZipAsync(string UUID, int AddressID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://API.Integration/DataResourceAddress30/getCityRequest", ReplyAction="http://API.Integration/DataResourceAddress30/getCityResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="StringResult")]
        DataResourceAddress30Service.StringResult getCity(string UUID, int AddressID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://API.Integration/DataResourceAddress30/getCityRequest", ReplyAction="http://API.Integration/DataResourceAddress30/getCityResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="StringResult")]
        System.Threading.Tasks.Task<DataResourceAddress30Service.StringResult> getCityAsync(string UUID, int AddressID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://API.Integration/DataResourceAddress30/setCountryRequest", ReplyAction="http://API.Integration/DataResourceAddress30/setCountryResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="Result")]
        DataResourceAddress30Service.Result setCountry(string UUID, string Country, int AddressID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://API.Integration/DataResourceAddress30/setCountryRequest", ReplyAction="http://API.Integration/DataResourceAddress30/setCountryResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="Result")]
        System.Threading.Tasks.Task<DataResourceAddress30Service.Result> setCountryAsync(string UUID, string Country, int AddressID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://API.Integration/DataResourceAddress30/setStreetRequest", ReplyAction="http://API.Integration/DataResourceAddress30/setStreetResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="Result")]
        DataResourceAddress30Service.Result setStreet(string UUID, string Street, int AddressID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://API.Integration/DataResourceAddress30/setStreetRequest", ReplyAction="http://API.Integration/DataResourceAddress30/setStreetResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="Result")]
        System.Threading.Tasks.Task<DataResourceAddress30Service.Result> setStreetAsync(string UUID, string Street, int AddressID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://API.Integration/DataResourceAddress30/setStreet2Request", ReplyAction="http://API.Integration/DataResourceAddress30/setStreet2Response")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="Result")]
        DataResourceAddress30Service.Result setStreet2(string UUID, string Street2, int AddressID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://API.Integration/DataResourceAddress30/setStreet2Request", ReplyAction="http://API.Integration/DataResourceAddress30/setStreet2Response")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="Result")]
        System.Threading.Tasks.Task<DataResourceAddress30Service.Result> setStreet2Async(string UUID, string Street2, int AddressID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://API.Integration/DataResourceAddress30/getStreetRequest", ReplyAction="http://API.Integration/DataResourceAddress30/getStreetResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="StringResult")]
        DataResourceAddress30Service.StringResult getStreet(string UUID, int AddressID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://API.Integration/DataResourceAddress30/getStreetRequest", ReplyAction="http://API.Integration/DataResourceAddress30/getStreetResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="StringResult")]
        System.Threading.Tasks.Task<DataResourceAddress30Service.StringResult> getStreetAsync(string UUID, int AddressID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://API.Integration/DataResourceAddress30/getAddressIDRequest", ReplyAction="http://API.Integration/DataResourceAddress30/getAddressIDResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="IntegerResult")]
        DataResourceAddress30Service.IntegerResult getAddressID(string UUID, int AddressID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://API.Integration/DataResourceAddress30/getAddressIDRequest", ReplyAction="http://API.Integration/DataResourceAddress30/getAddressIDResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="IntegerResult")]
        System.Threading.Tasks.Task<DataResourceAddress30Service.IntegerResult> getAddressIDAsync(string UUID, int AddressID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://API.Integration/DataResourceAddress30/getStreet2Request", ReplyAction="http://API.Integration/DataResourceAddress30/getStreet2Response")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="StringResult")]
        DataResourceAddress30Service.StringResult getStreet2(string UUID, int AddressID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://API.Integration/DataResourceAddress30/getStreet2Request", ReplyAction="http://API.Integration/DataResourceAddress30/getStreet2Response")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="StringResult")]
        System.Threading.Tasks.Task<DataResourceAddress30Service.StringResult> getStreet2Async(string UUID, int AddressID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://API.Integration/DataResourceAddress30/getAllAddressesRequest", ReplyAction="http://API.Integration/DataResourceAddress30/getAllAddressesResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="IntegerArrayResult")]
        DataResourceAddress30Service.IntegerArrayResult getAllAddresses(string UUID, int ResourceID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://API.Integration/DataResourceAddress30/getAllAddressesRequest", ReplyAction="http://API.Integration/DataResourceAddress30/getAllAddressesResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="IntegerArrayResult")]
        System.Threading.Tasks.Task<DataResourceAddress30Service.IntegerArrayResult> getAllAddressesAsync(string UUID, int ResourceID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://API.Integration/DataResourceAddress30/setOfficeRequest", ReplyAction="http://API.Integration/DataResourceAddress30/setOfficeResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="Result")]
        DataResourceAddress30Service.Result setOffice(string UUID, string ExternalID, int AddressID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://API.Integration/DataResourceAddress30/setOfficeRequest", ReplyAction="http://API.Integration/DataResourceAddress30/setOfficeResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="Result")]
        System.Threading.Tasks.Task<DataResourceAddress30Service.Result> setOfficeAsync(string UUID, string ExternalID, int AddressID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://API.Integration/DataResourceAddress30/getOfficeRequest", ReplyAction="http://API.Integration/DataResourceAddress30/getOfficeResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="StringResult")]
        DataResourceAddress30Service.StringResult getOffice(string UUID, int AddressID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://API.Integration/DataResourceAddress30/getOfficeRequest", ReplyAction="http://API.Integration/DataResourceAddress30/getOfficeResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="StringResult")]
        System.Threading.Tasks.Task<DataResourceAddress30Service.StringResult> getOfficeAsync(string UUID, int AddressID);
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://API.Integration/")]
    public partial class AddressIN
    {
        
        private int addressIDField;
        
        private int addressTypeField;
        
        private string cityField;
        
        private string countryField;
        
        private string descriptionField;
        
        private string name1Field;
        
        private string name2Field;
        
        private string officeField;
        
        private string stateField;
        
        private string streetField;
        
        private string street2Field;
        
        private string zipField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public int addressID
        {
            get
            {
                return this.addressIDField;
            }
            set
            {
                this.addressIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1)]
        public int addressType
        {
            get
            {
                return this.addressTypeField;
            }
            set
            {
                this.addressTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=2)]
        public string city
        {
            get
            {
                return this.cityField;
            }
            set
            {
                this.cityField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=3)]
        public string country
        {
            get
            {
                return this.countryField;
            }
            set
            {
                this.countryField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=4)]
        public string description
        {
            get
            {
                return this.descriptionField;
            }
            set
            {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=5)]
        public string name1
        {
            get
            {
                return this.name1Field;
            }
            set
            {
                this.name1Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=6)]
        public string name2
        {
            get
            {
                return this.name2Field;
            }
            set
            {
                this.name2Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=7)]
        public string office
        {
            get
            {
                return this.officeField;
            }
            set
            {
                this.officeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=8)]
        public string state
        {
            get
            {
                return this.stateField;
            }
            set
            {
                this.stateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=9)]
        public string street
        {
            get
            {
                return this.streetField;
            }
            set
            {
                this.streetField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=10)]
        public string street2
        {
            get
            {
                return this.street2Field;
            }
            set
            {
                this.street2Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=11)]
        public string zip
        {
            get
            {
                return this.zipField;
            }
            set
            {
                this.zipField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(IntegerArrayResult))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(IntegerResult))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(StringResult))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://API.Integration/")]
    public partial class Result
    {
        
        private int statusCodeField;
        
        private string statusCodeAlphanumericField;
        
        private string statusMessageField;
        
        private System.Nullable<int>[] warning_StatusCodeListField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public int statusCode
        {
            get
            {
                return this.statusCodeField;
            }
            set
            {
                this.statusCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1)]
        public string statusCodeAlphanumeric
        {
            get
            {
                return this.statusCodeAlphanumericField;
            }
            set
            {
                this.statusCodeAlphanumericField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=2)]
        public string statusMessage
        {
            get
            {
                return this.statusMessageField;
            }
            set
            {
                this.statusMessageField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("warning_StatusCodeList", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true, Order=3)]
        public System.Nullable<int>[] warning_StatusCodeList
        {
            get
            {
                return this.warning_StatusCodeListField;
            }
            set
            {
                this.warning_StatusCodeListField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://API.Integration/")]
    public partial class IntegerArrayResult : Result
    {
        
        private System.Nullable<int>[] dataField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("data", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true, Order=0)]
        public System.Nullable<int>[] data
        {
            get
            {
                return this.dataField;
            }
            set
            {
                this.dataField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://API.Integration/")]
    public partial class IntegerResult : Result
    {
        
        private int dataField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public int data
        {
            get
            {
                return this.dataField;
            }
            set
            {
                this.dataField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://API.Integration/")]
    public partial class StringResult : Result
    {
        
        private string dataField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public string data
        {
            get
            {
                return this.dataField;
            }
            set
            {
                this.dataField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    public interface DataResourceAddress30Channel : DataResourceAddress30Service.DataResourceAddress30, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    public partial class DataResourceAddress30Client : System.ServiceModel.ClientBase<DataResourceAddress30Service.DataResourceAddress30>, DataResourceAddress30Service.DataResourceAddress30
    {
        
        /// <summary>
        /// Implement this partial method to configure the service endpoint.
        /// </summary>
        /// <param name="serviceEndpoint">The endpoint to configure</param>
        /// <param name="clientCredentials">The client credentials</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public DataResourceAddress30Client(Uri url) : 
                base(DataResourceAddress30Client.GetDefaultBinding(), DataResourceAddress30Client.GetDefaultEndpointAddress(url.ToString().TrimEnd('/')))
        {
            this.Endpoint.Name = EndpointConfiguration.DataResourceAddress30Port.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public DataResourceAddress30Client(EndpointConfiguration endpointConfiguration, Uri url) : 
                base(DataResourceAddress30Client.GetBindingForEndpoint(endpointConfiguration), DataResourceAddress30Client.GetEndpointAddress(endpointConfiguration, url.ToString().TrimEnd('/')))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public DataResourceAddress30Client(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(DataResourceAddress30Client.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public DataResourceAddress30Client(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(DataResourceAddress30Client.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public DataResourceAddress30Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public DataResourceAddress30Service.Result update(string UUID, DataResourceAddress30Service.AddressIN AddressIN, bool enableNullOrEmptyValues)
        {
            return base.Channel.update(UUID, AddressIN, enableNullOrEmptyValues);
        }
        
        public System.Threading.Tasks.Task<DataResourceAddress30Service.Result> updateAsync(string UUID, DataResourceAddress30Service.AddressIN AddressIN, bool enableNullOrEmptyValues)
        {
            return base.Channel.updateAsync(UUID, AddressIN, enableNullOrEmptyValues);
        }
        
        public DataResourceAddress30Service.Result delete(string UUID, int AddressID)
        {
            return base.Channel.delete(UUID, AddressID);
        }
        
        public System.Threading.Tasks.Task<DataResourceAddress30Service.Result> deleteAsync(string UUID, int AddressID)
        {
            return base.Channel.deleteAsync(UUID, AddressID);
        }
        
        public DataResourceAddress30Service.StringResult getState(string UUID, int AddressID)
        {
            return base.Channel.getState(UUID, AddressID);
        }
        
        public System.Threading.Tasks.Task<DataResourceAddress30Service.StringResult> getStateAsync(string UUID, int AddressID)
        {
            return base.Channel.getStateAsync(UUID, AddressID);
        }
        
        public DataResourceAddress30Service.IntegerResult insert(string UUID, int resourceID)
        {
            return base.Channel.insert(UUID, resourceID);
        }
        
        public System.Threading.Tasks.Task<DataResourceAddress30Service.IntegerResult> insertAsync(string UUID, int resourceID)
        {
            return base.Channel.insertAsync(UUID, resourceID);
        }
        
        public DataResourceAddress30Service.StringResult getCountry(string UUID, int AddressID)
        {
            return base.Channel.getCountry(UUID, AddressID);
        }
        
        public System.Threading.Tasks.Task<DataResourceAddress30Service.StringResult> getCountryAsync(string UUID, int AddressID)
        {
            return base.Channel.getCountryAsync(UUID, AddressID);
        }
        
        public DataResourceAddress30Service.Result setState(string UUID, string State, int AddressID)
        {
            return base.Channel.setState(UUID, State, AddressID);
        }
        
        public System.Threading.Tasks.Task<DataResourceAddress30Service.Result> setStateAsync(string UUID, string State, int AddressID)
        {
            return base.Channel.setStateAsync(UUID, State, AddressID);
        }
        
        public DataResourceAddress30Service.Result setDescription(string UUID, string Description, int AddressID)
        {
            return base.Channel.setDescription(UUID, Description, AddressID);
        }
        
        public System.Threading.Tasks.Task<DataResourceAddress30Service.Result> setDescriptionAsync(string UUID, string Description, int AddressID)
        {
            return base.Channel.setDescriptionAsync(UUID, Description, AddressID);
        }
        
        public DataResourceAddress30Service.StringResult getDescription(string UUID, int AddressID)
        {
            return base.Channel.getDescription(UUID, AddressID);
        }
        
        public System.Threading.Tasks.Task<DataResourceAddress30Service.StringResult> getDescriptionAsync(string UUID, int AddressID)
        {
            return base.Channel.getDescriptionAsync(UUID, AddressID);
        }
        
        public DataResourceAddress30Service.Result setAddressType(string UUID, int AddressType, int addressID)
        {
            return base.Channel.setAddressType(UUID, AddressType, addressID);
        }
        
        public System.Threading.Tasks.Task<DataResourceAddress30Service.Result> setAddressTypeAsync(string UUID, int AddressType, int addressID)
        {
            return base.Channel.setAddressTypeAsync(UUID, AddressType, addressID);
        }
        
        public DataResourceAddress30Service.Result setName1(string UUID, string Name, int AddressID)
        {
            return base.Channel.setName1(UUID, Name, AddressID);
        }
        
        public System.Threading.Tasks.Task<DataResourceAddress30Service.Result> setName1Async(string UUID, string Name, int AddressID)
        {
            return base.Channel.setName1Async(UUID, Name, AddressID);
        }
        
        public DataResourceAddress30Service.IntegerResult insert2(string UUID, int ResourceID, DataResourceAddress30Service.AddressIN AddressIN)
        {
            return base.Channel.insert2(UUID, ResourceID, AddressIN);
        }
        
        public System.Threading.Tasks.Task<DataResourceAddress30Service.IntegerResult> insert2Async(string UUID, int ResourceID, DataResourceAddress30Service.AddressIN AddressIN)
        {
            return base.Channel.insert2Async(UUID, ResourceID, AddressIN);
        }
        
        public DataResourceAddress30Service.StringResult getName1(string UUID, int AddressID)
        {
            return base.Channel.getName1(UUID, AddressID);
        }
        
        public System.Threading.Tasks.Task<DataResourceAddress30Service.StringResult> getName1Async(string UUID, int AddressID)
        {
            return base.Channel.getName1Async(UUID, AddressID);
        }
        
        public DataResourceAddress30Service.Result setName2(string UUID, string Name, int AddressID)
        {
            return base.Channel.setName2(UUID, Name, AddressID);
        }
        
        public System.Threading.Tasks.Task<DataResourceAddress30Service.Result> setName2Async(string UUID, string Name, int AddressID)
        {
            return base.Channel.setName2Async(UUID, Name, AddressID);
        }
        
        public DataResourceAddress30Service.StringResult getName2(string UUID, int AddressID)
        {
            return base.Channel.getName2(UUID, AddressID);
        }
        
        public System.Threading.Tasks.Task<DataResourceAddress30Service.StringResult> getName2Async(string UUID, int AddressID)
        {
            return base.Channel.getName2Async(UUID, AddressID);
        }
        
        public DataResourceAddress30Service.IntegerResult getAddressType(string UUID, int addressID)
        {
            return base.Channel.getAddressType(UUID, addressID);
        }
        
        public System.Threading.Tasks.Task<DataResourceAddress30Service.IntegerResult> getAddressTypeAsync(string UUID, int addressID)
        {
            return base.Channel.getAddressTypeAsync(UUID, addressID);
        }
        
        public DataResourceAddress30Service.Result setZip(string UUID, string Zip, int AddressID)
        {
            return base.Channel.setZip(UUID, Zip, AddressID);
        }
        
        public System.Threading.Tasks.Task<DataResourceAddress30Service.Result> setZipAsync(string UUID, string Zip, int AddressID)
        {
            return base.Channel.setZipAsync(UUID, Zip, AddressID);
        }
        
        public DataResourceAddress30Service.Result setCity(string UUID, string City, int AddressID)
        {
            return base.Channel.setCity(UUID, City, AddressID);
        }
        
        public System.Threading.Tasks.Task<DataResourceAddress30Service.Result> setCityAsync(string UUID, string City, int AddressID)
        {
            return base.Channel.setCityAsync(UUID, City, AddressID);
        }
        
        public DataResourceAddress30Service.StringResult getZip(string UUID, int AddressID)
        {
            return base.Channel.getZip(UUID, AddressID);
        }
        
        public System.Threading.Tasks.Task<DataResourceAddress30Service.StringResult> getZipAsync(string UUID, int AddressID)
        {
            return base.Channel.getZipAsync(UUID, AddressID);
        }
        
        public DataResourceAddress30Service.StringResult getCity(string UUID, int AddressID)
        {
            return base.Channel.getCity(UUID, AddressID);
        }
        
        public System.Threading.Tasks.Task<DataResourceAddress30Service.StringResult> getCityAsync(string UUID, int AddressID)
        {
            return base.Channel.getCityAsync(UUID, AddressID);
        }
        
        public DataResourceAddress30Service.Result setCountry(string UUID, string Country, int AddressID)
        {
            return base.Channel.setCountry(UUID, Country, AddressID);
        }
        
        public System.Threading.Tasks.Task<DataResourceAddress30Service.Result> setCountryAsync(string UUID, string Country, int AddressID)
        {
            return base.Channel.setCountryAsync(UUID, Country, AddressID);
        }
        
        public DataResourceAddress30Service.Result setStreet(string UUID, string Street, int AddressID)
        {
            return base.Channel.setStreet(UUID, Street, AddressID);
        }
        
        public System.Threading.Tasks.Task<DataResourceAddress30Service.Result> setStreetAsync(string UUID, string Street, int AddressID)
        {
            return base.Channel.setStreetAsync(UUID, Street, AddressID);
        }
        
        public DataResourceAddress30Service.Result setStreet2(string UUID, string Street2, int AddressID)
        {
            return base.Channel.setStreet2(UUID, Street2, AddressID);
        }
        
        public System.Threading.Tasks.Task<DataResourceAddress30Service.Result> setStreet2Async(string UUID, string Street2, int AddressID)
        {
            return base.Channel.setStreet2Async(UUID, Street2, AddressID);
        }
        
        public DataResourceAddress30Service.StringResult getStreet(string UUID, int AddressID)
        {
            return base.Channel.getStreet(UUID, AddressID);
        }
        
        public System.Threading.Tasks.Task<DataResourceAddress30Service.StringResult> getStreetAsync(string UUID, int AddressID)
        {
            return base.Channel.getStreetAsync(UUID, AddressID);
        }
        
        public DataResourceAddress30Service.IntegerResult getAddressID(string UUID, int AddressID)
        {
            return base.Channel.getAddressID(UUID, AddressID);
        }
        
        public System.Threading.Tasks.Task<DataResourceAddress30Service.IntegerResult> getAddressIDAsync(string UUID, int AddressID)
        {
            return base.Channel.getAddressIDAsync(UUID, AddressID);
        }
        
        public DataResourceAddress30Service.StringResult getStreet2(string UUID, int AddressID)
        {
            return base.Channel.getStreet2(UUID, AddressID);
        }
        
        public System.Threading.Tasks.Task<DataResourceAddress30Service.StringResult> getStreet2Async(string UUID, int AddressID)
        {
            return base.Channel.getStreet2Async(UUID, AddressID);
        }
        
        public DataResourceAddress30Service.IntegerArrayResult getAllAddresses(string UUID, int ResourceID)
        {
            return base.Channel.getAllAddresses(UUID, ResourceID);
        }
        
        public System.Threading.Tasks.Task<DataResourceAddress30Service.IntegerArrayResult> getAllAddressesAsync(string UUID, int ResourceID)
        {
            return base.Channel.getAllAddressesAsync(UUID, ResourceID);
        }
        
        public DataResourceAddress30Service.Result setOffice(string UUID, string ExternalID, int AddressID)
        {
            return base.Channel.setOffice(UUID, ExternalID, AddressID);
        }
        
        public System.Threading.Tasks.Task<DataResourceAddress30Service.Result> setOfficeAsync(string UUID, string ExternalID, int AddressID)
        {
            return base.Channel.setOfficeAsync(UUID, ExternalID, AddressID);
        }
        
        public DataResourceAddress30Service.StringResult getOffice(string UUID, int AddressID)
        {
            return base.Channel.getOffice(UUID, AddressID);
        }
        
        public System.Threading.Tasks.Task<DataResourceAddress30Service.StringResult> getOfficeAsync(string UUID, int AddressID)
        {
            return base.Channel.getOfficeAsync(UUID, AddressID);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.DataResourceAddress30Port))
            {
                System.ServiceModel.Channels.CustomBinding result = new System.ServiceModel.Channels.CustomBinding();
                System.ServiceModel.Channels.TextMessageEncodingBindingElement textBindingElement = new System.ServiceModel.Channels.TextMessageEncodingBindingElement();
                textBindingElement.MessageVersion = System.ServiceModel.Channels.MessageVersion.CreateVersion(System.ServiceModel.EnvelopeVersion.Soap12, System.ServiceModel.Channels.AddressingVersion.None);
                result.Elements.Add(textBindingElement);
                System.ServiceModel.Channels.HttpsTransportBindingElement httpsBindingElement = new System.ServiceModel.Channels.HttpsTransportBindingElement();
                httpsBindingElement.AllowCookies = true;
                httpsBindingElement.MaxBufferSize = int.MaxValue;
                httpsBindingElement.MaxReceivedMessageSize = int.MaxValue;
                result.Elements.Add(httpsBindingElement);
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration, string url)
        {
            if ((endpointConfiguration == EndpointConfiguration.DataResourceAddress30Port))
            {
                return new System.ServiceModel.EndpointAddress($"{url}/DataResourceAddress30");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding()
        {
            return DataResourceAddress30Client.GetBindingForEndpoint(EndpointConfiguration.DataResourceAddress30Port);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress(string url)
        {
            return DataResourceAddress30Client.GetEndpointAddress(EndpointConfiguration.DataResourceAddress30Port, url);
        }
        
        public enum EndpointConfiguration
        {
            
            DataResourceAddress30Port,
        }
    }
}

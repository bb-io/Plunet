//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Blackbird.Plugins.Plunet.DataDocument30Service
{
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://API.Integration/", ConfigurationName="Blackbird.Plugins.Plunet.DataDocument30Service.DataDocument30")]
    public interface DataDocument30
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://API.Integration/DataDocument30/download_DocumentRequest", ReplyAction="http://API.Integration/DataDocument30/download_DocumentResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="FileResult")]
        System.Threading.Tasks.Task<Blackbird.Plugins.Plunet.DataDocument30Service.FileResult> download_DocumentAsync(string UUID, int MainID, int FolderType, string FilePathName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://API.Integration/DataDocument30/getFileListRequest", ReplyAction="http://API.Integration/DataDocument30/getFileListResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="StringArrayResult")]
        System.Threading.Tasks.Task<Blackbird.Plugins.Plunet.DataDocument30Service.StringArrayResult> getFileListAsync(string UUID, int MainID, int FolderType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://API.Integration/DataDocument30/upload_DocumentRequest", ReplyAction="http://API.Integration/DataDocument30/upload_DocumentResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<Blackbird.Plugins.Plunet.DataDocument30Service.upload_DocumentResponse> upload_DocumentAsync(Blackbird.Plugins.Plunet.DataDocument30Service.upload_DocumentRequest request);
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://API.Integration/")]
    public partial class FileResult : Result
    {
        
        private byte[] fileContentField;
        
        private long fileSizeField;
        
        private string filenameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="base64Binary", Order=0)]
        public byte[] fileContent
        {
            get
            {
                return this.fileContentField;
            }
            set
            {
                this.fileContentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1)]
        public long fileSize
        {
            get
            {
                return this.fileSizeField;
            }
            set
            {
                this.fileSizeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=2)]
        public string filename
        {
            get
            {
                return this.filenameField;
            }
            set
            {
                this.filenameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(FileResult))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(StringArrayResult))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://API.Integration/")]
    public partial class Result
    {
        
        private int statusCodeField;
        
        private string statusCodeAlphanumericField;
        
        private string statusMessageField;
        
        private System.Nullable<int>[] warning_StatusCodeListField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public int statusCode
        {
            get
            {
                return this.statusCodeField;
            }
            set
            {
                this.statusCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1)]
        public string statusCodeAlphanumeric
        {
            get
            {
                return this.statusCodeAlphanumericField;
            }
            set
            {
                this.statusCodeAlphanumericField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=2)]
        public string statusMessage
        {
            get
            {
                return this.statusMessageField;
            }
            set
            {
                this.statusMessageField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("warning_StatusCodeList", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true, Order=3)]
        public System.Nullable<int>[] warning_StatusCodeList
        {
            get
            {
                return this.warning_StatusCodeListField;
            }
            set
            {
                this.warning_StatusCodeListField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://API.Integration/")]
    public partial class StringArrayResult : Result
    {
        
        private string[] dataField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("data", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true, Order=0)]
        public string[] data
        {
            get
            {
                return this.dataField;
            }
            set
            {
                this.dataField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="upload_Document", WrapperNamespace="http://API.Integration/", IsWrapped=true)]
    public partial class upload_DocumentRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public string UUID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=1)]
        public int MainID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=2)]
        public int FolderType;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=3)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] FileByteStream;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=4)]
        public string FilePathName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=5)]
        public long FileSize;
        
        public upload_DocumentRequest()
        {
        }
        
        public upload_DocumentRequest(string UUID, int MainID, int FolderType, byte[] FileByteStream, string FilePathName, long FileSize)
        {
            this.UUID = UUID;
            this.MainID = MainID;
            this.FolderType = FolderType;
            this.FileByteStream = FileByteStream;
            this.FilePathName = FilePathName;
            this.FileSize = FileSize;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="upload_DocumentResponse", WrapperNamespace="http://API.Integration/", IsWrapped=true)]
    public partial class upload_DocumentResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public Blackbird.Plugins.Plunet.DataDocument30Service.Result Result;
        
        public upload_DocumentResponse()
        {
        }
        
        public upload_DocumentResponse(Blackbird.Plugins.Plunet.DataDocument30Service.Result Result)
        {
            this.Result = Result;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    public interface DataDocument30Channel : Blackbird.Plugins.Plunet.DataDocument30Service.DataDocument30, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    public partial class DataDocument30Client : System.ServiceModel.ClientBase<Blackbird.Plugins.Plunet.DataDocument30Service.DataDocument30>, Blackbird.Plugins.Plunet.DataDocument30Service.DataDocument30
    {
        
        /// <summary>
        /// Implement this partial method to configure the service endpoint.
        /// </summary>
        /// <param name="serviceEndpoint">The endpoint to configure</param>
        /// <param name="clientCredentials">The client credentials</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public DataDocument30Client() : 
                base(DataDocument30Client.GetDefaultBinding(), DataDocument30Client.GetDefaultEndpointAddress())
        {
            this.Endpoint.Name = EndpointConfiguration.DataDocument30Port.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public DataDocument30Client(EndpointConfiguration endpointConfiguration) : 
                base(DataDocument30Client.GetBindingForEndpoint(endpointConfiguration), DataDocument30Client.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public DataDocument30Client(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(DataDocument30Client.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public DataDocument30Client(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(DataDocument30Client.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public DataDocument30Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public System.Threading.Tasks.Task<Blackbird.Plugins.Plunet.DataDocument30Service.FileResult> download_DocumentAsync(string UUID, int MainID, int FolderType, string FilePathName)
        {
            return base.Channel.download_DocumentAsync(UUID, MainID, FolderType, FilePathName);
        }
        
        public System.Threading.Tasks.Task<Blackbird.Plugins.Plunet.DataDocument30Service.StringArrayResult> getFileListAsync(string UUID, int MainID, int FolderType)
        {
            return base.Channel.getFileListAsync(UUID, MainID, FolderType);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Blackbird.Plugins.Plunet.DataDocument30Service.upload_DocumentResponse> Blackbird.Plugins.Plunet.DataDocument30Service.DataDocument30.upload_DocumentAsync(Blackbird.Plugins.Plunet.DataDocument30Service.upload_DocumentRequest request)
        {
            return base.Channel.upload_DocumentAsync(request);
        }
        
        public System.Threading.Tasks.Task<Blackbird.Plugins.Plunet.DataDocument30Service.upload_DocumentResponse> upload_DocumentAsync(string UUID, int MainID, int FolderType, byte[] FileByteStream, string FilePathName, long FileSize)
        {
            Blackbird.Plugins.Plunet.DataDocument30Service.upload_DocumentRequest inValue = new Blackbird.Plugins.Plunet.DataDocument30Service.upload_DocumentRequest();
            inValue.UUID = UUID;
            inValue.MainID = MainID;
            inValue.FolderType = FolderType;
            inValue.FileByteStream = FileByteStream;
            inValue.FilePathName = FilePathName;
            inValue.FileSize = FileSize;
            return ((Blackbird.Plugins.Plunet.DataDocument30Service.DataDocument30)(this)).upload_DocumentAsync(inValue);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.DataDocument30Port))
            {
                System.ServiceModel.Channels.CustomBinding result = new System.ServiceModel.Channels.CustomBinding();
                System.ServiceModel.Channels.TextMessageEncodingBindingElement textBindingElement = new System.ServiceModel.Channels.TextMessageEncodingBindingElement();
                textBindingElement.MessageVersion = System.ServiceModel.Channels.MessageVersion.CreateVersion(System.ServiceModel.EnvelopeVersion.Soap12, System.ServiceModel.Channels.AddressingVersion.None);
                result.Elements.Add(textBindingElement);
                System.ServiceModel.Channels.HttpsTransportBindingElement httpsBindingElement = new System.ServiceModel.Channels.HttpsTransportBindingElement();
                httpsBindingElement.AllowCookies = true;
                httpsBindingElement.MaxBufferSize = int.MaxValue;
                httpsBindingElement.MaxReceivedMessageSize = int.MaxValue;
                result.Elements.Add(httpsBindingElement);
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.DataDocument30Port))
            {
                return new System.ServiceModel.EndpointAddress("https://test71.plunet.com/DataDocument30");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding()
        {
            return DataDocument30Client.GetBindingForEndpoint(EndpointConfiguration.DataDocument30Port);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress()
        {
            return DataDocument30Client.GetEndpointAddress(EndpointConfiguration.DataDocument30Port);
        }
        
        public enum EndpointConfiguration
        {
            
            DataDocument30Port,
        }
    }
}
